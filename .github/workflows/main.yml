---
name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  tests:
    name: "${{ matrix.os }}: Python ${{ matrix.python-version }}"
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
        # We use old Ubuntu to try to get more compatible wheels:
        os: ["ubuntu-16.04", "macos-latest"]

    runs-on: "${{ matrix.os }}"

    steps:
      - uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - uses: "actions/setup-python@v1"
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: "actions-rs/toolchain@v1"
        with:
          toolchain: stable
      - name: "Install dependencies and code"
        run: |
          set -euo pipefail
          make venv
          . venv/bin/activate
          make
          pip install -e .[dev]
      - name: "Run tests"
        run: |
          set -euo pipefail
          . venv/bin/activate
          make test
      - name: "Build wheel"
        run: |
            set -euo pipefail
            . venv/bin/activate
            make wheel
      - name: "Convert to manylinux wheel"
        if: startsWith(matrix.os, 'ubuntu')
        run: |
            set -euo pipefail
            . venv/bin/activate
            mkdir dist/orig
            mv dist/*.whl dist/orig/
            auditwheel repair --plat manylinux1_x86_64 -w dist/ dist/orig/*.whl
      - uses: actions/upload-artifact@v2
        with:
          name: "${{ matrix.os }}-${{ matrix.python-version }}-wheel"
          path: dist/*.whl
      - name: Publish distribution ðŸ“¦ to Test PyPI
        env:
          TWINE_USER: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
            set -euo pipefail
            . venv/bin/activate
            twine check dist/*.whl
            twine upload --repository testpypi dist/*.whl
      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        env:
          TWINE_USER: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
            set -euo pipefail
            . venv/bin/activate
            twine check dist/*.whl
            twine upload --repository pypi dist/*.whl
